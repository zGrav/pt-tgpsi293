/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package atm_guiv2;

import javax.swing.JOptionPane;

/**
 *
 * @author David
 */
public class Transfer extends javax.swing.JFrame {

    /**
     * Creates new form Transfer
     */
    public Transfer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        transferLabel = new javax.swing.JLabel();
        transferTxt = new javax.swing.JTextField();
        transferBtn = new javax.swing.JButton();
        transfer2Label = new javax.swing.JLabel();
        transfer2Txt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        transferLabel.setText("Insert account number to transfer:");

        transferBtn.setText("Transfer");
        transferBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferBtnActionPerformed(evt);
            }
        });

        transfer2Label.setText("Insert amount to transfer:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(transferBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(transferLabel)
                            .addComponent(transfer2Label))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(transferTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                            .addComponent(transfer2Txt))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(transferLabel)
                    .addComponent(transferTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(transfer2Label)
                    .addComponent(transfer2Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(transferBtn)
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void transferBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferBtnActionPerformed
        // TODO add your handling code here:
                try {
            
        if (cashManagement.client1.flag == true) {
            
            if (cashManagement.client1.accountnumber == Integer.parseInt(transferTxt.getText())) {
                 JOptionPane.showMessageDialog(this, "You cannot transfer money to yourself. ", "Error", JOptionPane.ERROR_MESSAGE); 
                 return;
            }
            
            if (cashManagement.client1.balance < Double.parseDouble(transfer2Txt.getText())) {
                JOptionPane.showMessageDialog(this, "You don't have enough money. ", "Error", JOptionPane.ERROR_MESSAGE); 
            }
            
            else {   
            cashManagement.client1.balance -= Double.parseDouble(transfer2Txt.getText());
            cashManagement.client2.balance += Double.parseDouble(transfer2Txt.getText());
            
            JOptionPane.showMessageDialog(this, "You have transferred to: " + cashManagement.client2.clientname
                    + "\n with account number " + cashManagement.client2.accountnumber 
                    + "\n the amount of: " + transfer2Txt.getText() , "Info", JOptionPane.INFORMATION_MESSAGE);
            
            setVisible(false);
            new startATM().setVisible(true);
             startATM.helloLabel.setText("Hello, " + cashManagement.client1.clientname + "!");
        }
        }
        
        else if (cashManagement.client2.flag == true) {
                     
            if (cashManagement.client2.accountnumber == Integer.parseInt(transferTxt.getText())) {
                 JOptionPane.showMessageDialog(this, "You cannot transfer money to yourself. ", "Error", JOptionPane.ERROR_MESSAGE); 
                return;
            }
            
            if (cashManagement.client1.balance < Double.parseDouble(transfer2Txt.getText())) {
                JOptionPane.showMessageDialog(this, "You don't have enough money. ", "Error", JOptionPane.ERROR_MESSAGE); 
            }
            
            else {   
            cashManagement.client2.balance -= Double.parseDouble(transfer2Txt.getText());
            cashManagement.client1.balance += Double.parseDouble(transfer2Txt.getText());
            
            JOptionPane.showMessageDialog(this, "You have transferred to: " + cashManagement.client1.clientname
                    + "\n with account number " + cashManagement.client1.accountnumber 
                    + "\n the amount of: " + transfer2Txt.getText() , "Info", JOptionPane.INFORMATION_MESSAGE);
            
            setVisible(false);
            new startATM().setVisible(true);
             startATM.helloLabel.setText("Hello, " + cashManagement.client2.clientname + "!");
            }
        }
                }
        catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Invalid format. ", "Error", JOptionPane.ERROR_MESSAGE); 
            
            transferTxt.setText("");
            transfer2Txt.setText("");
        }
    }//GEN-LAST:event_transferBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Transfer().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel transfer2Label;
    private javax.swing.JTextField transfer2Txt;
    private javax.swing.JButton transferBtn;
    private javax.swing.JLabel transferLabel;
    private javax.swing.JTextField transferTxt;
    // End of variables declaration//GEN-END:variables
}
