/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GUI.java
 *
 * Created on 14/Nov/2012, 10:03:48
 */

package TextArea_Random;

/**
 *
 * @author 0103629
 */
public class GUI extends javax.swing.JFrame {

    //  variables
        int[] rndArray = new int[100];
        int rnd;
        int i;
        int sum = 0;
        int avg = 0;
        int max = 0;
        int min = 101;
        String test;

    /** Creates new form GUI */
    public GUI() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        randomTxtArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        opTxtArea = new javax.swing.JTextArea();
        avgBox = new javax.swing.JCheckBox();
        maxBox = new javax.swing.JCheckBox();
        minBox = new javax.swing.JCheckBox();
        avgLabel = new javax.swing.JLabel();
        maxLabel = new javax.swing.JLabel();
        minLabel = new javax.swing.JLabel();
        countBox = new javax.swing.JCheckBox();
        countLabel = new javax.swing.JLabel();
        rndBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        randomTxtArea.setColumns(20);
        randomTxtArea.setRows(5);
        jScrollPane1.setViewportView(randomTxtArea);

        opTxtArea.setColumns(20);
        opTxtArea.setRows(5);
        jScrollPane2.setViewportView(opTxtArea);

        avgBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                avgBoxActionPerformed(evt);
            }
        });

        maxBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxBoxActionPerformed(evt);
            }
        });

        minBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minBoxActionPerformed(evt);
            }
        });

        avgLabel.setText("Average");

        maxLabel.setText("Max");

        minLabel.setText("Min");

        countBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countBoxActionPerformed(evt);
            }
        });

        countLabel.setText("Count Numbers");

        rndBtn.setText("Generate");
        rndBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rndBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(avgLabel)
                                    .addComponent(maxLabel)
                                    .addComponent(minLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(avgBox)
                                    .addComponent(maxBox)
                                    .addComponent(minBox)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(countLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(countBox))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(rndBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(avgBox)
                            .addComponent(avgLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(maxBox)
                            .addComponent(maxLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(minBox)
                            .addComponent(minLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(countBox)
                            .addComponent(countLabel))))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rndBtn))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rndBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rndBtnActionPerformed
        // TODO add your handling code here:

        for (i = 0; i < 100; i++) {

            rnd = (int) (1 + Math.random() * 100);

            rndArray[i] = rnd;

            test = randomTxtArea.getText();

            if (test.length() > 0) {
            randomTxtArea.setText(randomTxtArea.getText() + "\n" + rndArray[i]);
        }
            else {
                randomTxtArea.setText(randomTxtArea.getText() + rndArray[i]);
            }
        }
    }//GEN-LAST:event_rndBtnActionPerformed

    private void countBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countBoxActionPerformed
        // TODO add your handling code here:

        test = opTxtArea.getText();

      if (countBox.isSelected() == true) {

            if (test.length() > 0) {
            opTxtArea.setText(opTxtArea.getText() + "\n" + "Count -> " + rndArray.length);
        }
            else {
                opTxtArea.setText(opTxtArea.getText() + rndArray.length);
            }


        }
    }//GEN-LAST:event_countBoxActionPerformed

    private void avgBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_avgBoxActionPerformed
        // TODO add your handling code here:

        if (avgBox.isSelected() == true) {

        for (int j = 0; j < rndArray.length; j++) {
         sum += rndArray[j];
        }

        if (avg == 0) {
        avg = sum / rndArray.length;
            }

         test = opTxtArea.getText();

            if (test.length() > 0) {
            opTxtArea.setText(opTxtArea.getText() + "\n" + "Average -> " + avg);
        }
            else {
                opTxtArea.setText(opTxtArea.getText() + "Average -> " + avg);
            }
        }
    }//GEN-LAST:event_avgBoxActionPerformed

    private void maxBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxBoxActionPerformed
        // TODO add your handling code here:

        if (maxBox.isSelected() == true) {

        for (int h = 0; h < rndArray.length; h++) {

            while (rndArray[h] > max) {

             max=rndArray[h];
            }
        }

       test = opTxtArea.getText();

            if (test.length() > 0) {
            opTxtArea.setText(opTxtArea.getText() + "\n" + "Max number -> " + max);
        }
            else {
                opTxtArea.setText(opTxtArea.getText() + "Max number -> " + max);
            }
        }
    }//GEN-LAST:event_maxBoxActionPerformed

    private void minBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minBoxActionPerformed
        // TODO add your handling code here:

        if (minBox.isSelected() == true) {

        for (int h = 0; h < rndArray.length; h++) {

         while (rndArray[h] < min) {
             min=rndArray[h];
            }
        }

       test = opTxtArea.getText();

            if (test.length() > 0) {
            opTxtArea.setText(opTxtArea.getText() + "\n" + "Min number -> " + min);
        }
            else {
                opTxtArea.setText(opTxtArea.getText() + "Min number -> " + min);
            }
        }

    }//GEN-LAST:event_minBoxActionPerformed
    

    /**
    * @param args the command line arguments
    */


    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox avgBox;
    private javax.swing.JLabel avgLabel;
    private javax.swing.JCheckBox countBox;
    private javax.swing.JLabel countLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JCheckBox maxBox;
    private javax.swing.JLabel maxLabel;
    private javax.swing.JCheckBox minBox;
    private javax.swing.JLabel minLabel;
    private javax.swing.JTextArea opTxtArea;
    private javax.swing.JTextArea randomTxtArea;
    private javax.swing.JButton rndBtn;
    // End of variables declaration//GEN-END:variables

}
